[{"/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/index.tsx":"1","/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/reportWebVitals.ts":"2","/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/App.tsx":"3","/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/components/Pixel.tsx":"4","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/index.tsx":"5","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/reportWebVitals.ts":"6","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/App.tsx":"7","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Pixel.tsx":"8","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Canvas.tsx":"9","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Results.tsx":"10","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/CanvasWithResults.tsx":"11","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/routes/test/PredictContainer.tsx":"12","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/routes/train/TrainContainer.tsx":"13","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Training.tsx":"14"},{"size":500,"mtime":1609189791290,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609189791300,"results":"17","hashOfConfig":"16"},{"size":265,"mtime":1609202170676,"results":"18","hashOfConfig":"16"},{"size":1240,"mtime":1609202481805,"results":"19","hashOfConfig":"16"},{"size":500,"mtime":1609189791290,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1609189791300,"results":"22","hashOfConfig":"21"},{"size":545,"mtime":1610811147938,"results":"23","hashOfConfig":"21"},{"size":808,"mtime":1610036225554,"results":"24","hashOfConfig":"21"},{"size":921,"mtime":1610807027516,"results":"25","hashOfConfig":"21"},{"size":370,"mtime":1610580501443,"results":"26","hashOfConfig":"21"},{"size":713,"mtime":1610807242149,"results":"27","hashOfConfig":"21"},{"size":2284,"mtime":1610810587173,"results":"28","hashOfConfig":"21"},{"size":2744,"mtime":1610813551558,"results":"29","hashOfConfig":"21"},{"size":743,"mtime":1610813270987,"results":"30","hashOfConfig":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1mtpnmu",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1n0ilil",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/index.tsx",[],["63","64"],"/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/reportWebVitals.ts",[],"/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/App.tsx",["65","66"],"/mnt/c/Users/theo_/workspaces/mnist_web_app/client/src/components/Pixel.tsx",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/index.tsx",[],["67","68"],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/reportWebVitals.ts",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/App.tsx",["69"],"import React from 'react';\nimport { Router, Link } from '@reach/router';\nimport logo from './logo.svg';\nimport './App.css';\nimport PredictContainer from './routes/test/PredictContainer';\nimport TrainContainer from './routes/train/TrainContainer';\n\nconst App: React.FC<{}> = () => {\n  return (\n    <>\n    <nav>\n      <Link to=\"/\">Predict</Link> |{\" \"}\n      <Link to=\"train\">Training</Link>\n    </nav>\n      <Router>\n        <PredictContainer path='/'/>\n        <TrainContainer path='train' />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Pixel.tsx",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Canvas.tsx",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Results.tsx",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/CanvasWithResults.tsx",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/routes/test/PredictContainer.tsx",["70","71","72"],"import React, {useCallback, useState, useEffect, FormEvent, ChangeEventHandler} from 'react';\r\nimport './PredictContainer.css';\r\nimport {chunk} from 'lodash';\r\n//import Canvas from '../components/Canvas';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport {ResultsProps} from '../../components/Results'\r\nimport CanvasWithResults from '../../components/CanvasWithResults'\r\nimport {RouteComponentProps} from '@reach/router'\r\n\r\n\r\nexport type PredictContainerProps = RouteComponentProps;\r\n\r\n\r\n//TODO: Separate train logic with predict logic and instead of just a checkbox, create another route with a router.\r\nconst PredictContainer: React.FC<PredictContainerProps> = () => {\r\n    const [pixels, setPixels] = useState(Array(28*28).fill(0));\r\n    const [results, setResults] = useState({prediction:-1, probability: 0});\r\n\r\n    const handleMouseDown:Function = (rowIndex:number, columnIndex:number) => {\r\n        const index = rowIndex*28+columnIndex;\r\n        setPixels((oldPixelValue:number[])=>{\r\n            const copyOfOldPixels = oldPixelValue.slice();\r\n            console.log(copyOfOldPixels);\r\n            copyOfOldPixels[index] = copyOfOldPixels[index]===1? 0:1;\r\n            return copyOfOldPixels;\r\n        });\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setPixels(Array(28*28).fill(0));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchPrediction = async (data: number[]) => {\r\n            const res:AxiosResponse<ResultsProps> = await axios({\r\n                url: '/array',\r\n                method: 'POST',\r\n                data: {\r\n                    array: chunk(data, 28)\r\n                }\r\n            });\r\n            const pred = res.data;\r\n            console.log(pred);\r\n            setResults(pred);\r\n        }\r\n        fetchPrediction(pixels);\r\n    }, [pixels]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Canvas pixels={pixels} onMouseDown={handleMouseDown} />\r\n            <div className=\"clear-button-wrapper\">\r\n                <button onClick={()=>handleClear()}>Clear</button>\r\n            </div>\r\n            <Results {...results}/> */}\r\n            <CanvasWithResults canvas={{pixels: pixels, onMouseDown: handleMouseDown}} results={results} onClear={()=>handleClear()} />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PredictContainer;\r\n","/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/routes/train/TrainContainer.tsx",[],"/mnt/c/Users/theo_/Workspaces/mnist_web_app/client/src/components/Training.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"84","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":27},{"ruleId":"77","severity":1,"message":"85","line":1,"column":50,"nodeType":"79","messageId":"80","endLine":1,"endColumn":59},{"ruleId":"77","severity":1,"message":"86","line":1,"column":61,"nodeType":"79","messageId":"80","endLine":1,"endColumn":79},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Pixel' is defined but never used.",["87"],["88"],"'useCallback' is defined but never used.","'FormEvent' is defined but never used.","'ChangeEventHandler' is defined but never used.","no-global-assign","no-unsafe-negation"]